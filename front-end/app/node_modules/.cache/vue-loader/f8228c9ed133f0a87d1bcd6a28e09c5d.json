{"remainingRequest":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\layout\\UpperNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\layout\\UpperNavbar.vue","mtime":1639255239486},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1639160574342},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1639160574788}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport errorHandling from './../../javascript/errorHandling.js';\nimport apiRequests from './../../javascript/apiRequests.js';\nimport VueJwtDecode from 'vue-jwt-decode';\nimport Search from './Search';\n\n\nexport default {\n    name: \"Login\",\n  components: {Search},\n  data() {\n        return {\n            loginUsername: '',\n            loginPassword: '',\n            loggedIn: false,\n        };\n    },\n    methods: {\n        logIn() {\n            apiRequests\n                .postRequestToApi('/api/login', {\n                    username: this.loginUsername,\n                    password: this.loginPassword\n                })\n                .then((response) => {\n                    localStorage.setItem(\"Authorization\", response.headers.authorization);\n                    this.resetFields();\n                    this.loggedIn = true;\n                    errorHandling.successMsg(\"You are logged in!\", 1000);\n                })\n                .catch(() => {\n                    errorHandling.errorMsg(\"Wrong username or password, try again!\", 1200);\n                });\n        },\n        resetFields() {\n            this.loginUsername = '';\n            this.loginPassword = '';\n        },\n        logout() {\n            this.loggedIn = false;\n            localStorage.removeItem(\"Authorization\");\n            this.$router.push(\"/\");\n        },\n        checkToken() {\n            let token = localStorage.getItem('Authorization');\n            if (token === null || token === undefined) {\n                this.loggedIn = false;\n                this.$router.push(\"/\");\n            }\n        }\n    },\n    beforeMount() {\n        let token = localStorage.getItem('Authorization');\n        if (token !== null && token !== undefined) {\n            let tokenString = token.split(\"Bearer \")[1];\n            let exp = (VueJwtDecode.decode(tokenString))[\"exp\"];\n            if (Date.now() / 1000 > exp - 86400) {\n                this.loggedIn = false;\n                localStorage.removeItem(\"Authorization\");\n                this.$router.push(\"/\");\n            }\n        }\n    },\n    mounted() {\n        if (localStorage.getItem(\"Authorization\") !== null) {\n            apiRequests.getRequestToApiWithAuthorization('/api/check')\n                .then(response => {\n                    if (response.status === 200) {\n                        this.loggedIn = true;\n                    }\n                })\n                .catch(() => {\n                    this.loggedIn = false;\n                    this.logout();\n                });\n        }\n    }\n}\n\n\n",{"version":3,"sources":["UpperNavbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpperNavbar.vue","sourceRoot":"src/components/layout","sourcesContent":["<template>\r\n  <nav class=\"p-2\">\r\n    <div class=\"text-right\">\r\n      <div style=\"float:left\">\r\n        <Search/>\r\n      </div>\r\n      <router-link class=\"btn btn-dark mx-1\" id=\"makeAppointments\" tag=\"button\" to=\"/makeAppointment\" @click=\"checkToken\"\r\n                   v-if=\"loggedIn\" exact>\r\n        Make an appointment\r\n      </router-link>\r\n\r\n      <router-link class=\"btn btn-dark mx-1\" id=\"register\" tag=\"button\" to=\"/registration\" @click=\"checkToken\"\r\n                   v-if=\"!loggedIn\" exact>\r\n        Register\r\n      </router-link>\r\n\r\n      <router-link class=\"btn btn-dark mx-1\" id=\"myAppointments\" tag=\"button\" to=\"/userAppointments\" v-if=\"loggedIn\"\r\n                   exact>\r\n        My Appointments\r\n      </router-link>\r\n\r\n      <button class=\"btn btn-dark mx-1\" id=\"logout\" v-if=\"loggedIn\" @click=\"logout\">Logout\r\n      </button>\r\n\r\n      <div class=\"dropdown\" v-if=\"!loggedIn\">\r\n        <button type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                aria-expanded=\"false\" class=\"btn btn-dark dropdown-toggle\">Login\r\n        </button>\r\n        <div class=\"dropdown-menu dropdown-menu-right py-0\">\r\n          <div class=\"px-3 pt-3 login-dropdown\">\r\n\r\n            <form @submit.prevent=\"logIn\">\r\n              <div class=\"form-group\">\r\n                <input id=\"usernameInput\" placeholder=\"Username\" name=\"loginUsername\"\r\n                       class=\"form-control form-control-sm custom-input\" type=\"text\"\r\n                       v-model=\"loginUsername\"\r\n                       autocomplete=\"username\">\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <input id=\"passwordInput\" placeholder=\"Password\" name=\"loginPassword\"\r\n                       class=\"form-control form-control-sm\" type=\"password\"\r\n                       v-model=\"loginPassword\"\r\n                       autocomplete=\"new-password\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" name=\"login\">Login</button>\r\n              </div>\r\n            </form>\r\n\r\n            <div class=\"form-group text-center\">\r\n              <small>\r\n                <router-link id=\"forgotPassword\" tag=\"a\" to=\"/forgotPassword\" exact>\r\n                  Forgot password?\r\n                </router-link>\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\n    import errorHandling from './../../javascript/errorHandling.js';\r\n    import apiRequests from './../../javascript/apiRequests.js';\r\n    import VueJwtDecode from 'vue-jwt-decode';\r\n    import Search from './Search';\r\n\r\n\r\n    export default {\r\n        name: \"Login\",\r\n      components: {Search},\r\n      data() {\r\n            return {\r\n                loginUsername: '',\r\n                loginPassword: '',\r\n                loggedIn: false,\r\n            };\r\n        },\r\n        methods: {\r\n            logIn() {\r\n                apiRequests\r\n                    .postRequestToApi('/api/login', {\r\n                        username: this.loginUsername,\r\n                        password: this.loginPassword\r\n                    })\r\n                    .then((response) => {\r\n                        localStorage.setItem(\"Authorization\", response.headers.authorization);\r\n                        this.resetFields();\r\n                        this.loggedIn = true;\r\n                        errorHandling.successMsg(\"You are logged in!\", 1000);\r\n                    })\r\n                    .catch(() => {\r\n                        errorHandling.errorMsg(\"Wrong username or password, try again!\", 1200);\r\n                    });\r\n            },\r\n            resetFields() {\r\n                this.loginUsername = '';\r\n                this.loginPassword = '';\r\n            },\r\n            logout() {\r\n                this.loggedIn = false;\r\n                localStorage.removeItem(\"Authorization\");\r\n                this.$router.push(\"/\");\r\n            },\r\n            checkToken() {\r\n                let token = localStorage.getItem('Authorization');\r\n                if (token === null || token === undefined) {\r\n                    this.loggedIn = false;\r\n                    this.$router.push(\"/\");\r\n                }\r\n            }\r\n        },\r\n        beforeMount() {\r\n            let token = localStorage.getItem('Authorization');\r\n            if (token !== null && token !== undefined) {\r\n                let tokenString = token.split(\"Bearer \")[1];\r\n                let exp = (VueJwtDecode.decode(tokenString))[\"exp\"];\r\n                if (Date.now() / 1000 > exp - 86400) {\r\n                    this.loggedIn = false;\r\n                    localStorage.removeItem(\"Authorization\");\r\n                    this.$router.push(\"/\");\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            if (localStorage.getItem(\"Authorization\") !== null) {\r\n                apiRequests.getRequestToApiWithAuthorization('/api/check')\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            this.loggedIn = true;\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        this.loggedIn = false;\r\n                        this.logout();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  .dropdown {\r\n    display: inline-block !important;\r\n  }\r\n\r\n  nav {\r\n    background-color: #D6BDF3;\r\n  }\r\n\r\n  .login-dropdown {\r\n    background-color: white;\r\n    text-align: center;\r\n  }\r\n\r\n  .custom-input {\r\n    width: 200px;\r\n  }\r\n\r\n</style>\r\n"]}]}