{"remainingRequest":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\Registration.vue?vue&type=template&id=5d567869&scoped=true&","dependencies":[{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\Registration.vue","mtime":1639421175725},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1639160575825},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1639160574788}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container-fluid\" }, [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-xl-5 col-lg-6 col-md-8 col-sm-11\" }, [\n        _c(\"h3\", [_vm._v(\" \" + _vm._s(_vm.return_msg) + \" \")]),\n        _c(\n          \"form\",\n          {\n            attrs: { id: \"post-form\" },\n            on: {\n              submit: function ($event) {\n                $event.preventDefault()\n                return _vm.processForm.apply(null, arguments)\n              },\n            },\n          },\n          [\n            _vm._m(0),\n            _c(\"div\", { staticClass: \"form-group text-left\" }, [\n              _c(\"label\", { attrs: { for: \"username\" } }, [\n                _vm._v(\"Username:\"),\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.username,\n                    expression: \"username\",\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, min: 4, max: 128 },\n                    expression: \"{ required: true, min: 4, max: 128 }\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  id: \"username\",\n                  type: \"text\",\n                  name: \"username\",\n                  placeholder: \"Username\",\n                  autocomplete: \"username\",\n                },\n                domProps: { value: _vm.username },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.username = $event.target.value\n                  },\n                },\n              }),\n              _vm.errors.has(\"username\")\n                ? _c(\"div\", { staticClass: \"error\" }, [\n                    _vm._v(_vm._s(_vm.errors.first(\"username\"))),\n                  ])\n                : _vm._e(),\n            ]),\n            _c(\"div\", { staticClass: \"form-group text-left\" }, [\n              _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"Email:\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.email,\n                    expression: \"email\",\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, min: 4 },\n                    expression: \"{ required: true, min: 4 }\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  id: \"email\",\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  autocomplete: \"email\",\n                },\n                domProps: { value: _vm.email },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.email = $event.target.value\n                  },\n                },\n              }),\n              _vm.errors.has(\"email\")\n                ? _c(\"div\", { staticClass: \"error\" }, [\n                    _vm._v(_vm._s(_vm.errors.first(\"email\"))),\n                  ])\n                : _vm._e(),\n            ]),\n            _c(\"div\", { staticClass: \"form-group text-left\" }, [\n              _c(\"label\", { attrs: { for: \"firstname\" } }, [\n                _vm._v(\"First name:\"),\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.firstName,\n                    expression: \"firstName\",\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, min: 2 },\n                    expression: \"{ required: true, min: 2 }\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  id: \"firstname\",\n                  type: \"text\",\n                  name: \"firstName\",\n                  placeholder: \"Firstname\",\n                  autocomplete: \"first-name\",\n                },\n                domProps: { value: _vm.firstName },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.firstName = $event.target.value\n                  },\n                },\n              }),\n              _vm.errors.has(\"firstName\")\n                ? _c(\"div\", { staticClass: \"error\" }, [\n                    _vm._v(_vm._s(_vm.errors.first(\"firstName\"))),\n                  ])\n                : _vm._e(),\n            ]),\n            _c(\"div\", { staticClass: \"form-group text-left\" }, [\n              _c(\"label\", { attrs: { for: \"lastname\" } }, [\n                _vm._v(\"Last name:\"),\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.lastName,\n                    expression: \"lastName\",\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, min: 2 },\n                    expression: \"{ required: true, min: 2 }\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  id: \"lastname\",\n                  type: \"text\",\n                  name: \"lastname\",\n                  placeholder: \"Lastname\",\n                  autocomplete: \"last-name\",\n                },\n                domProps: { value: _vm.lastName },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.lastName = $event.target.value\n                  },\n                },\n              }),\n              _vm.errors.has(\"lastname\")\n                ? _c(\"div\", { staticClass: \"error\" }, [\n                    _vm._v(_vm._s(_vm.errors.first(\"lastname\"))),\n                  ])\n                : _vm._e(),\n            ]),\n            _c(\"div\", { staticClass: \"form-group text-left\" }, [\n              _c(\"label\", { attrs: { for: \"password\" } }, [\n                _vm._v(\"Password:\"),\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.password,\n                    expression: \"password\",\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, min: 6 },\n                    expression: \"{ required: true, min: 6 }\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  id: \"password\",\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  autocomplete: \"new-password\",\n                },\n                domProps: { value: _vm.password },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.password = $event.target.value\n                  },\n                },\n              }),\n              _vm.errors.has(\"password\")\n                ? _c(\"div\", { staticClass: \"error\" }, [\n                    _vm._v(_vm._s(_vm.errors.first(\"password\"))),\n                  ])\n                : _vm._e(),\n            ]),\n            _c(\"div\", { staticClass: \"form-group text-left\" }, [\n              _c(\"label\", { attrs: { for: \"matchingPassword\" } }, [\n                _vm._v(\"Password confirmation:\"),\n              ]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.matchingPassword,\n                    expression: \"matchingPassword\",\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, min: 6, confirmed: _vm.password },\n                    expression:\n                      \"{ required: true, min: 6, confirmed: password }\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  id: \"matchingPassword\",\n                  type: \"password\",\n                  name: \"matchingPassword\",\n                  placeholder: \"Password again\",\n                  autocomplete: \"new-password\",\n                },\n                domProps: { value: _vm.matchingPassword },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.matchingPassword = $event.target.value\n                  },\n                },\n              }),\n              _vm.errors.has(\"matchingPassword\")\n                ? _c(\"div\", { staticClass: \"error\" }, [\n                    _vm._v(_vm._s(_vm.errors.first(\"matchingPassword\"))),\n                  ])\n                : _vm._e(),\n            ]),\n            _c(\"input\", {\n              staticClass: \"btn btn-primary mb-3\",\n              attrs: { type: \"submit\", value: \"Submit\" },\n            }),\n          ]\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { attrs: { id: \"legend\" } }, [\n      _c(\"h3\", [_vm._v(\"Register\")]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}