{"remainingRequest":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\ViewAppointment.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\ViewAppointment.vue","mtime":1639350965775},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1639160574342},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1639160574788}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport apiRequests from '../javascript/apiRequests.js';\nimport errorHandling from './../javascript/errorHandling.js';\nimport VueCtkDateTimePicker from 'vue-ctk-date-time-picker';\nimport 'vue-ctk-date-time-picker/dist/vue-ctk-date-time-picker.css';\n\n\nexport default {\n    name: 'viewAppointment',\n    components: {\n        VueCtkDateTimePicker\n    },\n    data() {\n        return {\n            response: [],\n            newDentistName: null,\n            newVisitTime: null,\n            newProcedure: null,\n            newDescription: null,\n            editingPost: false,\n            disabledHours: ['00','01','02','03','04','05','06','07','19','20','21','22','23'],\n            minDate:'',\n\n        };\n    },\n    methods: {\n\n        loadAppointment() {\n            apiRequests\n                .getRequestToApiWithAuthorization('/api/visits/' + this.$route.params.Pid)\n                .then((response) => {\n                    this.response = response.data;\n                })\n                .catch(() => {\n                        errorHandling.errorMsgWithButton(\"This appointment no longer exists!\")\n                    }\n                );\n        },\n        deleteAppointment(visitId) {\n            apiRequests\n                .deleteRequestWithAuthorization('/api/delete/visit/' + visitId)\n                .then(() => {\n                    this.$router.push(\"/userAppointments\");\n                })\n                .catch(() => {\n                        errorHandling.errorMsgWithButton(\"Failed to delete this post!\");\n                    }\n                );\n        },\n        enableEditingAppointment() {\n            this.newDentistName = this.response.dentistName;\n            this.newVisitTime = this.response.visitTime;\n            this.newProcedure = this.response.procedure;\n            this.newDescription = this.response.description;\n            this.editingPost = this.response.id;\n        },\n        disableEditingAppointment: function () {\n            this.newDentistName = null;\n            this.newVisitTime = null;\n            this.newProcedure = null;\n            this.newDescription = null;\n            this.editingPost = false;\n        },\n        saveEditAppointment(visitId) {\n            this.$validator.validate().then(valid => {\n                if (!valid) {\n                    errorHandling.errorMsg(\"These changes are forbidden!\", 1000);\n                } else {\n                    this.response.dentistName = this.newDentistName;\n                    this.response.visitTime = this.newVisitTime;\n                    this.response.procedure = this.newProcedure;\n                    this.response.description = this.newDescription;\n                    apiRequests\n                        .patchRequestWithAuthorization('/api/edit/visit/' + visitId, {\n                            dentistName: this.newDentistName,\n                            visitTime: this.newVisitTime,\n                            procedure: this.newProcedure,\n                            description: this.newDescription\n                        })\n                        .catch(() => {\n                                errorHandling.errorMsgWithButton(\"Failed to update this post!\")\n                            }\n                        );\n                    this.disableEditingAppointment();\n                }\n            });\n        },\n    },\n    mounted() {\n        this.loadAppointment();\n        let moment = require('moment'); // require\n        this.minDate = moment().format(\"YYYY-MM-DD HH\");\n\n    }\n}\n",{"version":3,"sources":["ViewAppointment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ViewAppointment.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"container-fluid pb-5\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-xl-7 col-lg-8 col-md-9 col-sm-11\">\r\n                <div class=\"post-item text-left p-3 mb-3\">\r\n                    <div class=\"text-left\">\r\n                        <h3>Dentist name: {{response.dentistName}}</h3>\r\n                        <p>Visit time: {{response.visitTime.split(\"T\")[0] + \" \"\r\n                            + response.visitTime.split(\"T\")[1]}}</p>\r\n                        <p>Procedure: {{response.procedure}}</p>\r\n                        <p>Description: {{response.description}}</p>\r\n\r\n                        <p class=\"mt-2 mb-1\">\r\n                            <small>\r\n                                Made by: {{response.madeBy}}\r\n                            </small>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group mx-4 mb-2\" v-if=\"editingPost === response.id\">\r\n                        <select class=\"form-control\" id=\"newDentistName\" name=\"newDentistName\" v-model=\"newDentistName\"\r\n                                v-validate=\"{ required: true }\">\r\n                            <option value=\"Mart Tamm\">Mart Tamm</option>\r\n                            <option value=\"Maire Kuusk\">Maire Kuusk</option>\r\n                            <option value=\"Pille Paju\">Pille Paju</option>\r\n                            <option value=\"Tiit Haab\">Tiit Haab</option>\r\n                            <option value=\"Milvi Pihlakas\">Milvi Pihlakas</option>\r\n                            <option value=\"Priit Vaher\" selected=\"selected\">Priit Vaher</option>\r\n                        </select>\r\n                        <div class=\"error\" v-if=\"errors.has('newDentistName')\">{{errors.first('newDentistName')}}</div>\r\n                        <VueCtkDateTimePicker id=\"DatePicker\" label=\"Select date and time\" name=\"visitTime\"\r\n                                              format='YYYY-MM-DD HH'\r\n                                              v-validate=\"{ required: true}\"\r\n                                              :min-date=\"minDate\"\r\n                                              v-model=\"visitTime\"\r\n                                              :minute-interval=\"60\"\r\n                                              :disabled-hours=\"disabledHours\">\r\n                        </VueCtkDateTimePicker>\r\n                        <div class=\"error\" v-if=\"errors.has('newVisitTime')\">{{errors.first('newVisitTime')}}</div>\r\n                        <input class=\"form-control mb-2\" name=\"newProcedure\" v-bind:id=\"response.dentistName + 4\"\r\n                               v-model=\"newProcedure\" v-validate=\"{ required: true, min: 3, max: 128 }\">\r\n                        <div class=\"error\" v-if=\"errors.has('newProcedure')\">{{errors.first('newProcedure')}}</div>\r\n                        <textarea class=\"form-control mb-2\" rows=\"3\" name=\"newDescription\" v-bind:id=\"response.dentistName + 5\"\r\n                                  v-model=\"newDescription\" v-validate=\"{ required: true, min: 5 }\"></textarea>\r\n                        <div class=\"error\" v-if=\"errors.has('newDescription')\">{{errors.first('newDescription')}}</div>\r\n                        <button class=\"btn btn-primary m-1\" @click=\"saveEditAppointment(response.id)\" v-bind:id=\"response.dentistName + 6\">Save\r\n                        </button>\r\n                        <button class=\"btn btn-secondary m-1\" @click=\"disableEditingAppointment\" v-bind:id=\"response.dentistName + 7\">Cancel</button>\r\n                    </div>\r\n                    <button v-if=\"response.canDelete\" class=\"btn btn-danger m-1\" type=\"submit\"\r\n                            @click=\"deleteAppointment(response.id)\">Cancel appointment\r\n                    </button>\r\n                    <button v-if=\"response.canDelete\" class=\"btn btn-warning m-1\" type=\"submit\"\r\n                            @click=\"enableEditingAppointment()\">Edit appointment\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import apiRequests from '../javascript/apiRequests.js';\r\n    import errorHandling from './../javascript/errorHandling.js';\r\n    import VueCtkDateTimePicker from 'vue-ctk-date-time-picker';\r\n    import 'vue-ctk-date-time-picker/dist/vue-ctk-date-time-picker.css';\r\n\r\n\r\n    export default {\r\n        name: 'viewAppointment',\r\n        components: {\r\n            VueCtkDateTimePicker\r\n        },\r\n        data() {\r\n            return {\r\n                response: [],\r\n                newDentistName: null,\r\n                newVisitTime: null,\r\n                newProcedure: null,\r\n                newDescription: null,\r\n                editingPost: false,\r\n                disabledHours: ['00','01','02','03','04','05','06','07','19','20','21','22','23'],\r\n                minDate:'',\r\n\r\n            };\r\n        },\r\n        methods: {\r\n\r\n            loadAppointment() {\r\n                apiRequests\r\n                    .getRequestToApiWithAuthorization('/api/visits/' + this.$route.params.Pid)\r\n                    .then((response) => {\r\n                        this.response = response.data;\r\n                    })\r\n                    .catch(() => {\r\n                            errorHandling.errorMsgWithButton(\"This appointment no longer exists!\")\r\n                        }\r\n                    );\r\n            },\r\n            deleteAppointment(visitId) {\r\n                apiRequests\r\n                    .deleteRequestWithAuthorization('/api/delete/visit/' + visitId)\r\n                    .then(() => {\r\n                        this.$router.push(\"/userAppointments\");\r\n                    })\r\n                    .catch(() => {\r\n                            errorHandling.errorMsgWithButton(\"Failed to delete this post!\");\r\n                        }\r\n                    );\r\n            },\r\n            enableEditingAppointment() {\r\n                this.newDentistName = this.response.dentistName;\r\n                this.newVisitTime = this.response.visitTime;\r\n                this.newProcedure = this.response.procedure;\r\n                this.newDescription = this.response.description;\r\n                this.editingPost = this.response.id;\r\n            },\r\n            disableEditingAppointment: function () {\r\n                this.newDentistName = null;\r\n                this.newVisitTime = null;\r\n                this.newProcedure = null;\r\n                this.newDescription = null;\r\n                this.editingPost = false;\r\n            },\r\n            saveEditAppointment(visitId) {\r\n                this.$validator.validate().then(valid => {\r\n                    if (!valid) {\r\n                        errorHandling.errorMsg(\"These changes are forbidden!\", 1000);\r\n                    } else {\r\n                        this.response.dentistName = this.newDentistName;\r\n                        this.response.visitTime = this.newVisitTime;\r\n                        this.response.procedure = this.newProcedure;\r\n                        this.response.description = this.newDescription;\r\n                        apiRequests\r\n                            .patchRequestWithAuthorization('/api/edit/visit/' + visitId, {\r\n                                dentistName: this.newDentistName,\r\n                                visitTime: this.newVisitTime,\r\n                                procedure: this.newProcedure,\r\n                                description: this.newDescription\r\n                            })\r\n                            .catch(() => {\r\n                                    errorHandling.errorMsgWithButton(\"Failed to update this post!\")\r\n                                }\r\n                            );\r\n                        this.disableEditingAppointment();\r\n                    }\r\n                });\r\n            },\r\n        },\r\n        mounted() {\r\n            this.loadAppointment();\r\n            let moment = require('moment'); // require\r\n            this.minDate = moment().format(\"YYYY-MM-DD HH\");\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .post-item {\r\n        background-color: #f9f9f9;\r\n        border: 4px solid #e9e9e9;\r\n    }\r\n\r\n    .reply-area {\r\n        background-color: #f9f9f9;\r\n    }\r\n\r\n    .custom-file-upload {\r\n        border: 2px solid gray;\r\n        color: gray;\r\n        background-color: white;\r\n        padding: 8px 20px;\r\n        border-radius: 8px;\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    input[type=file] {\r\n        display: none;\r\n    }\r\n</style>\r\n"]}]}