{"remainingRequest":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\src\\components\\layout\\UpperNavbar.vue?vue&type=template&id=4ea7d146&scoped=true&","dependencies":[{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\src\\components\\layout\\UpperNavbar.vue","mtime":1656431639659},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656431599999},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1656431637649},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656431599999},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1656431637646}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"nav\", { staticClass: \"p-2\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"text-right\" },\n      [\n        _c(\"div\", { staticStyle: { float: \"left\" } }, [_c(\"Search\")], 1),\n        _c(\n          \"router-link\",\n          {\n            staticClass: \"btn btn-dark mx-1\",\n            attrs: { id: \"home\", tag: \"button\", to: \"/\", exact: \"\" },\n          },\n          [_vm._v(\"\\n      Home\\n    \")]\n        ),\n        _vm.loggedIn\n          ? _c(\n              \"router-link\",\n              {\n                staticClass: \"btn btn-dark mx-1\",\n                attrs: {\n                  id: \"makeAppointments\",\n                  tag: \"button\",\n                  to: \"/makeAppointment\",\n                  exact: \"\",\n                },\n                on: { click: _vm.checkToken },\n              },\n              [_vm._v(\"\\n      Make an appointment\\n    \")]\n            )\n          : _vm._e(),\n        !_vm.loggedIn\n          ? _c(\n              \"router-link\",\n              {\n                staticClass: \"btn btn-dark mx-1\",\n                attrs: {\n                  id: \"register\",\n                  tag: \"button\",\n                  to: \"/registration\",\n                  exact: \"\",\n                },\n                on: { click: _vm.checkToken },\n              },\n              [_vm._v(\"\\n      Register\\n    \")]\n            )\n          : _vm._e(),\n        _vm.loggedIn\n          ? _c(\n              \"router-link\",\n              {\n                staticClass: \"btn btn-dark mx-1\",\n                attrs: {\n                  id: \"myAppointments\",\n                  tag: \"button\",\n                  to: \"/userAppointments\",\n                  exact: \"\",\n                },\n              },\n              [_vm._v(\"\\n      My Appointments\\n    \")]\n            )\n          : _vm._e(),\n        _vm.loggedIn\n          ? _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-dark mx-1\",\n                attrs: { id: \"logout\" },\n                on: { click: _vm.logout },\n              },\n              [_vm._v(\"Logout\\n    \")]\n            )\n          : _vm._e(),\n        !_vm.loggedIn\n          ? _c(\"div\", { staticClass: \"dropdown\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-dark dropdown-toggle\",\n                  attrs: {\n                    type: \"button\",\n                    id: \"dropdownMenuButton\",\n                    \"data-toggle\": \"dropdown\",\n                    \"aria-haspopup\": \"true\",\n                    \"aria-expanded\": \"false\",\n                  },\n                },\n                [_vm._v(\"Login\\n      \")]\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"dropdown-menu dropdown-menu-right py-0\" },\n                [\n                  _c(\"div\", { staticClass: \"px-3 pt-3 login-dropdown\" }, [\n                    _c(\n                      \"form\",\n                      {\n                        on: {\n                          submit: function ($event) {\n                            $event.preventDefault()\n                            return _vm.logIn.apply(null, arguments)\n                          },\n                        },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.loginUsername,\n                                expression: \"loginUsername\",\n                              },\n                            ],\n                            staticClass:\n                              \"form-control form-control-sm custom-input\",\n                            attrs: {\n                              id: \"usernameInput\",\n                              placeholder: \"Username\",\n                              name: \"loginUsername\",\n                              type: \"text\",\n                              autocomplete: \"username\",\n                            },\n                            domProps: { value: _vm.loginUsername },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.loginUsername = $event.target.value\n                              },\n                            },\n                          }),\n                        ]),\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.loginPassword,\n                                expression: \"loginPassword\",\n                              },\n                            ],\n                            staticClass: \"form-control form-control-sm\",\n                            attrs: {\n                              id: \"passwordInput\",\n                              placeholder: \"Password\",\n                              name: \"loginPassword\",\n                              type: \"password\",\n                              autocomplete: \"new-password\",\n                            },\n                            domProps: { value: _vm.loginPassword },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.loginPassword = $event.target.value\n                              },\n                            },\n                          }),\n                        ]),\n                        _vm._m(0),\n                      ]\n                    ),\n                    _c(\"div\", { staticClass: \"form-group text-center\" }, [\n                      _c(\n                        \"small\",\n                        [\n                          _c(\n                            \"router-link\",\n                            {\n                              attrs: {\n                                id: \"forgotPassword\",\n                                tag: \"a\",\n                                to: \"/forgotPassword\",\n                                exact: \"\",\n                              },\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Forgot password?\\n              \"\n                              ),\n                            ]\n                          ),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]),\n                ]\n              ),\n            ])\n          : _vm._e(),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"form-group\" }, [\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn btn-primary btn-block\",\n          attrs: { type: \"submit\", name: \"login\" },\n        },\n        [_vm._v(\"Login\")]\n      ),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}