{"remainingRequest":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\src\\components\\ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\src\\components\\ResetPassword.vue","mtime":1656431639653},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\babel.config.js","mtime":1656431591931},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656492261885},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1656431598858},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656492261885},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1656492262442}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport apiRequests from \"./../javascript/apiRequests.js\";\nimport errorHandling from \"./../javascript/errorHandling.js\";\nexport default {\n  name: \"PasswordReset\",\n  data: function data() {\n    return {\n      username: '',\n      token: '',\n      newPassword: '',\n      matchingPassword: ''\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n\n      apiRequests.postRequestToApi('/api/resetPassword', {\n        username: this.username,\n        token: this.token,\n        newPassword: this.newPassword\n      }).then(function () {\n        _this.resetFields();\n\n        errorHandling.successMsg(\"Password changed!\", 1000);\n      }).catch(function (error) {\n        errorHandling.errorMsg(error.response.data.message, 1200);\n      });\n    },\n    resetFields: function resetFields() {\n      var _this2 = this;\n\n      this.username = '';\n      this.newPassword = '';\n      this.matchingPassword = '';\n      this.token = '';\n      this.$nextTick(function () {\n        return _this2.$validator.reset();\n      });\n    },\n    processForm: function processForm() {\n      var _this3 = this;\n\n      this.$validator.validate().then(function (valid) {\n        if (valid) {\n          _this3.register();\n        } else {\n          errorHandling.errorMsg(\"The form wasn't filled in properly!\", 1000);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.username = this.$route.query.username;\n    this.token = this.$route.query.token;\n  }\n};",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,WAAA;AACA,OAAA,aAAA;AAEA,eAAA;EACA,IAAA,EAAA,eADA;EAEA,IAFA,kBAEA;IACA,OAAA;MACA,QAAA,EAAA,EADA;MAEA,KAAA,EAAA,EAFA;MAGA,WAAA,EAAA,EAHA;MAIA,gBAAA,EAAA;IAJA,CAAA;EAMA,CATA;EAUA,OAAA,EAAA;IACA,QADA,sBACA;MAAA;;MACA,WAAA,CACA,gBADA,CACA,oBADA,EACA;QACA,QAAA,EAAA,KAAA,QADA;QAEA,KAAA,EAAA,KAAA,KAFA;QAGA,WAAA,EAAA,KAAA;MAHA,CADA,EAMA,IANA,CAMA,YAAA;QACA,KAAA,CAAA,WAAA;;QACA,aAAA,CAAA,UAAA,CAAA,mBAAA,EAAA,IAAA;MACA,CATA,EAUA,KAVA,CAUA,UAAA,KAAA,EAAA;QACA,aAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA;MACA,CAZA;IAcA,CAhBA;IAiBA,WAjBA,yBAiBA;MAAA;;MACA,KAAA,QAAA,GAAA,EAAA;MACA,KAAA,WAAA,GAAA,EAAA;MACA,KAAA,gBAAA,GAAA,EAAA;MACA,KAAA,KAAA,GAAA,EAAA;MACA,KAAA,SAAA,CAAA;QAAA,OAAA,MAAA,CAAA,UAAA,CAAA,KAAA,EAAA;MAAA,CAAA;IACA,CAvBA;IAwBA,WAxBA,yBAwBA;MAAA;;MACA,KAAA,UAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,KAAA,EAAA;QACA,IAAA,KAAA,EAAA;UACA,MAAA,CAAA,QAAA;QACA,CAFA,MAEA;UACA,aAAA,CAAA,QAAA,CAAA,qCAAA,EAAA,IAAA;QACA;MACA,CANA;IAOA;EAhCA,CAVA;EA4CA,OA5CA,qBA4CA;IACA,KAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;IACA,KAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;EACA;AA/CA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-11\">\r\n\r\n        <h5>Password reset form for user {{username}}</h5>\r\n        <form id=\"post-form\" @submit.prevent=\"processForm\">\r\n\r\n          <div class=\"form-group text-left\">\r\n            <label for=\"password\">New password:</label>\r\n            <input id=\"password\" class=\"form-control\" type=\"password\" name=\"newPassword\" placeholder=\"Password\"\r\n                   v-model=\"newPassword\" v-validate=\"{ required: true, min: 6 }\"\r\n                   autocomplete=\"new-password\">\r\n            <div class=\"error\" v-if=\"errors.has('newPassword')\">{{errors.first('newPassword')}}</div>\r\n          </div>\r\n\r\n          <div class=\"form-group text-left\">\r\n            <label for=\"matchingPassword\">Enter same password again:</label>\r\n            <input id=\"matchingPassword\" class=\"form-control\" type=\"password\" name=\"matchingPassword\"\r\n                   placeholder=\"Password again\" autocomplete=\"new-password\"\r\n                   v-model=\"matchingPassword\" v-validate=\"{ required: true, min: 6, confirmed: newPassword }\">\r\n            <div class=\"error\" v-if=\"errors.has('matchingPassword')\">{{errors.first('matchingPassword')}}</div>\r\n          </div>\r\n\r\n          <input class=\"btn btn-primary mb-3\" type=\"submit\" value=\"Submit\">\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import apiRequests from './../javascript/apiRequests.js';\r\n    import errorHandling from './../javascript/errorHandling.js';\r\n\r\n    export default {\r\n        name: \"PasswordReset\",\r\n        data() {\r\n            return {\r\n                username: '',\r\n                token: '',\r\n                newPassword: '',\r\n                matchingPassword: '',\r\n            };\r\n        },\r\n        methods: {\r\n            register() {\r\n                apiRequests\r\n                    .postRequestToApi('/api/resetPassword', {\r\n                        username: this.username,\r\n                        token: this.token,\r\n                        newPassword: this.newPassword,\r\n                    })\r\n                    .then(() => {\r\n                        this.resetFields();\r\n                        errorHandling.successMsg(\"Password changed!\", 1000);\r\n                    })\r\n                    .catch((error) => {\r\n                            errorHandling.errorMsg(error.response.data.message, 1200)\r\n                        }\r\n                    );\r\n            },\r\n            resetFields() {\r\n                this.username = '';\r\n                this.newPassword = '';\r\n                this.matchingPassword = '';\r\n                this.token = '';\r\n                this.$nextTick(() => this.$validator.reset());\r\n            },\r\n            processForm() {\r\n                this.$validator.validate().then(valid => {\r\n                    if (valid) {\r\n                        this.register();\r\n                    } else {\r\n                        errorHandling.errorMsg(\"The form wasn't filled in properly!\", 1000);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.username = this.$route.query.username;\r\n            this.token = this.$route.query.token;\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}