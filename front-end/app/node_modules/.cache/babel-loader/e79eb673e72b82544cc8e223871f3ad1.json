{"remainingRequest":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\UserAppointments.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\src\\components\\UserAppointments.vue","mtime":1639314474604},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\babel.config.js","mtime":1635333945277},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1639160574342},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639160574026},{"path":"C:\\Users\\alvar\\Desktop\\downloadhS4qe074722\\assignment_v1.1\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1639160574788}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport apiRequests from \"../javascript/apiRequests.js\";\nimport errorHandling from \"./../javascript/errorHandling.js\";\nexport default {\n  name: \"userAppointments\",\n  methods: {\n    loadUserAppointments: function loadUserAppointments() {\n      var _this = this;\n\n      apiRequests.getRequestToApiWithAuthorization('/api/usersAppointments').then(function (response) {\n        _this.userAppointments = response.data;\n      }).catch(function () {//localStorage.removeItem(\"Authorization\");\n        //this.$router.push(\"/\");\n      });\n    },\n    deleteAppointment: function deleteAppointment(VisitId) {\n      var _this2 = this;\n\n      apiRequests.deleteRequestWithAuthorization('/api/delete/visit/' + VisitId).then(function () {\n        _this2.loadUserAppointments();\n      }).catch(function () {//errorHandling.errorMsgWithButton(\"Failed to delete this post!\");\n        //localStorage.removeItem(\"Authorization\");\n        //this.$router.push(\"/\");\n      });\n    },\n    enableEditingAppointment: function enableEditingAppointment(data) {\n      this.newDentistName = data.dentistName;\n      this.newVisitTime = data.visitTime;\n      this.newProcedure = data.procedure;\n      this.newDescription = data.description;\n      this.editingPost = data.id;\n    },\n    disableEditingAppointment: function disableEditingAppointment() {\n      this.newDentistName = null;\n      this.newVisitTime = null;\n      this.newProcedure = null;\n      this.newDescription = null;\n      this.editingPost = false;\n    },\n    saveEditAppointment: function saveEditAppointment(index, visitId) {\n      var _this3 = this;\n\n      this.$validator.validate().then(function (valid) {\n        if (!valid) {\n          errorHandling.errorMsg(\"These changes are forbidden!\", 1000);\n        } else {\n          _this3.userAppointments[index].dentistName = _this3.newDentistName;\n          _this3.userAppointments[index].visitTime = _this3.newVisitTime;\n          _this3.userAppointments[index].procedure = _this3.newProcedure;\n          _this3.userAppointments[index].description = _this3.newDescription;\n          apiRequests.patchRequestWithAuthorization('/api/edit/visit/' + visitId, {\n            dentistName: _this3.newDentistName,\n            visitTime: _this3.newVisitTime,\n            procedure: _this3.newProcedure,\n            description: _this3.newDescription\n          }).catch(function () {\n            errorHandling.errorMsgWithButton(\"Failed to update this post!\");\n          });\n\n          _this3.disableEditingAppointment();\n        }\n      });\n    }\n  },\n  data: function data() {\n    return {\n      userAppointments: [],\n      tempValue: null,\n      newDentistName: null,\n      newVisitTime: null,\n      newProcedure: null,\n      newDescription: null,\n      editingPost: false\n    };\n  },\n  mounted: function mounted() {\n    this.loadUserAppointments();\n  }\n};",{"version":3,"sources":["UserAppointments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,WAAA;AACA,OAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,OAAA,EAAA;AACA,IAAA,oBADA,kCACA;AAAA;;AACA,MAAA,WAAA,CACA,gCADA,CACA,wBADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,YAAA,CACA;AACA;AACA,OARA;AAUA,KAZA;AAaA,IAAA,iBAbA,6BAaA,OAbA,EAaA;AAAA;;AACA,MAAA,WAAA,CACA,8BADA,CACA,uBAAA,OADA,EAEA,IAFA,CAEA,YAAA;AACA,QAAA,MAAA,CAAA,oBAAA;AACA,OAJA,EAKA,KALA,CAKA,YAAA,CACA;AACA;AACA;AACA,OATA;AAWA,KAzBA;AA0BA,IAAA,wBA1BA,oCA0BA,IA1BA,EA0BA;AACA,WAAA,cAAA,GAAA,IAAA,CAAA,WAAA;AACA,WAAA,YAAA,GAAA,IAAA,CAAA,SAAA;AACA,WAAA,YAAA,GAAA,IAAA,CAAA,SAAA;AACA,WAAA,cAAA,GAAA,IAAA,CAAA,WAAA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,EAAA;AACA,KAhCA;AAiCA,IAAA,yBAAA,EAAA,qCAAA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KAvCA;AAwCA,IAAA,mBAxCA,+BAwCA,KAxCA,EAwCA,OAxCA,EAwCA;AAAA;;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,CAAA,KAAA,EAAA;AACA,UAAA,aAAA,CAAA,QAAA,CAAA,8BAAA,EAAA,IAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,WAAA,GAAA,MAAA,CAAA,cAAA;AACA,UAAA,MAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,SAAA,GAAA,MAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,SAAA,GAAA,MAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,WAAA,GAAA,MAAA,CAAA,cAAA;AACA,UAAA,WAAA,CACA,6BADA,CACA,qBAAA,OADA,EACA;AACA,YAAA,WAAA,EAAA,MAAA,CAAA,cADA;AAEA,YAAA,SAAA,EAAA,MAAA,CAAA,YAFA;AAGA,YAAA,SAAA,EAAA,MAAA,CAAA,YAHA;AAIA,YAAA,WAAA,EAAA,MAAA,CAAA;AAJA,WADA,EAOA,KAPA,CAOA,YAAA;AACA,YAAA,aAAA,CAAA,kBAAA,CAAA,6BAAA;AACA,WATA;;AAWA,UAAA,MAAA,CAAA,yBAAA;AACA;AACA,OArBA;AAsBA;AA/DA,GAFA;AAmEA,EAAA,IAnEA,kBAmEA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,cAAA,EAAA,IAHA;AAIA,MAAA,YAAA,EAAA,IAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA,MAAA,cAAA,EAAA,IANA;AAOA,MAAA,WAAA,EAAA;AAPA,KAAA;AASA,GA7EA;AA8EA,EAAA,OA9EA,qBA8EA;AACA,SAAA,oBAAA;AACA;AAhFA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-xl-7 col-lg-8 col-md-9 col-sm-11\">\r\n\r\n        <h2 class=\"my-2\">My Appointments</h2>\r\n\r\n        <div class=\"post-list-item my-2 p-2 text-left\" v-for=\"(data, index) in userAppointments\" :key='data.id'>\r\n          <h3>{{data.dentistName}}</h3>\r\n          <p>{{data.visitTime}}</p>\r\n          <div class=\"form-group mx-4 mb-2\" v-if=\"editingPost === data.id\">\r\n            <select class=\"form-control\" id=\"newDentistName\" name=\"newDentistName\" v-model=\"newDentistName\"\r\n                    v-validate=\"{ required: true }\">\r\n              <option value=\"Mart Tamm\">Mart Tamm</option>\r\n              <option value=\"Maire Kuusk\">Maire Kuusk</option>\r\n              <option value=\"Pille Paju\">Pille Paju</option>\r\n              <option value=\"Tiit Haab\">Tiit Haab</option>\r\n              <option value=\"Milvi Pihlakas\">Milvi Pihlakas</option>\r\n              <option value=\"Priit Vaher\" selected=\"selected\">Priit Vaher</option>\r\n            </select>\r\n            <div class=\"error\" v-if=\"errors.has('newDentistName')\">{{errors.first('newDentistName')}}</div>\r\n            <input class=\"form-control mb-2\" name=\"newVisitTime\" v-bind:id=\"data.dentistName + 3\"\r\n                   v-model=\"newVisitTime\" v-validate=\"{ required: true, min: 3, max: 128 }\">\r\n            <div class=\"error\" v-if=\"errors.has('newVisitTime')\">{{errors.first('newVisitTime')}}</div>\r\n            <input class=\"form-control mb-2\" name=\"newProcedure\" v-bind:id=\"data.dentistName + 4\"\r\n                   v-model=\"newProcedure\" v-validate=\"{ required: true, min: 3, max: 128 }\">\r\n            <div class=\"error\" v-if=\"errors.has('newProcedure')\">{{errors.first('newProcedure')}}</div>\r\n            <textarea class=\"form-control mb-2\" rows=\"3\" name=\"newDescription\" v-bind:id=\"data.dentistName + 5\"\r\n                      v-model=\"newDescription\" v-validate=\"{ required: true, min: 5 }\"></textarea>\r\n            <div class=\"error\" v-if=\"errors.has('newDescription')\">{{errors.first('newDescription')}}</div>\r\n            <button class=\"btn btn-primary m-1\" @click=\"saveEditAppointment(index, data.id)\" v-bind:id=\"data.dentistName + 6\">Save\r\n            </button>\r\n            <button class=\"btn btn-secondary m-1\" @click=\"disableEditingAppointment\" v-bind:id=\"data.dentistName + 7\">Cancel</button>\r\n          </div>\r\n          <button class=\"btn btn-danger m-1\" type=\"submit\" v-bind:id=\"data.dentistName + 1\"\r\n                  @click=\"deleteAppointment(data.id)\">Delete\r\n          </button>\r\n          <button class=\"btn btn-warning m-1\" type=\"submit\" v-bind:id=\"data.dentistName\"\r\n                  @click=\"enableEditingAppointment(data)\">Edit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import apiRequests from '../javascript/apiRequests.js';\r\n    import errorHandling from './../javascript/errorHandling.js';\r\n\r\n    export default {\r\n        name: \"userAppointments\",\r\n        methods: {\r\n            loadUserAppointments() {\r\n                apiRequests\r\n                    .getRequestToApiWithAuthorization('/api/usersAppointments')\r\n                    .then((response) => {\r\n                        this.userAppointments = response.data;\r\n                    })\r\n                    .catch(() => {\r\n                            //localStorage.removeItem(\"Authorization\");\r\n                            //this.$router.push(\"/\");\r\n                        }\r\n                    );\r\n            },\r\n            deleteAppointment(VisitId) {\r\n                apiRequests\r\n                    .deleteRequestWithAuthorization('/api/delete/visit/' + VisitId)\r\n                    .then(() => {\r\n                        this.loadUserAppointments();\r\n                    })\r\n                    .catch(() => {\r\n                            //errorHandling.errorMsgWithButton(\"Failed to delete this post!\");\r\n                            //localStorage.removeItem(\"Authorization\");\r\n                            //this.$router.push(\"/\");\r\n                        }\r\n                    );\r\n            },\r\n            enableEditingAppointment(data) {\r\n                this.newDentistName = data.dentistName;\r\n                this.newVisitTime = data.visitTime;\r\n                this.newProcedure = data.procedure;\r\n                this.newDescription = data.description;\r\n                this.editingPost = data.id;\r\n            },\r\n            disableEditingAppointment: function () {\r\n              this.newDentistName = null;\r\n              this.newVisitTime = null;\r\n              this.newProcedure = null;\r\n              this.newDescription = null;\r\n              this.editingPost = false;\r\n            },\r\n            saveEditAppointment(index, visitId) {\r\n                this.$validator.validate().then(valid => {\r\n                    if (!valid) {\r\n                        errorHandling.errorMsg(\"These changes are forbidden!\", 1000);\r\n                    } else {\r\n                        this.userAppointments[index].dentistName = this.newDentistName;\r\n                        this.userAppointments[index].visitTime = this.newVisitTime;\r\n                        this.userAppointments[index].procedure = this.newProcedure;\r\n                        this.userAppointments[index].description = this.newDescription;\r\n                        apiRequests\r\n                            .patchRequestWithAuthorization('/api/edit/visit/' + visitId, {\r\n                                dentistName: this.newDentistName,\r\n                                visitTime: this.newVisitTime,\r\n                                procedure: this.newProcedure,\r\n                                description: this.newDescription\r\n                            })\r\n                            .catch(() => {\r\n                                    errorHandling.errorMsgWithButton(\"Failed to update this post!\")\r\n                                }\r\n                            );\r\n                        this.disableEditingAppointment();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n              userAppointments: [],\r\n              tempValue: null,\r\n              newDentistName: null,\r\n              newVisitTime: null,\r\n              newProcedure: null,\r\n              newDescription: null,\r\n              editingPost: false\r\n            };\r\n        },\r\n        mounted() {\r\n            this.loadUserAppointments();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n  .post-list-item {\r\n    background-color: #f9f9f9;\r\n    border-left: 4px solid #e9e9e9;\r\n  }\r\n</style>\r\n\r\n"],"sourceRoot":"src/components"}]}