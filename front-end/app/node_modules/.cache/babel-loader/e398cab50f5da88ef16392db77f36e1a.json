{"remainingRequest":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\src\\components\\ViewAppointment.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\src\\components\\ViewAppointment.vue","mtime":1656431639654},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\babel.config.js","mtime":1656431591931},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656492261885},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1656431598858},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656492261885},{"path":"C:\\Users\\alvar\\Desktop\\Staff\\My Projects\\dentistapp\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1656492262442}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport apiRequests from \"../javascript/apiRequests.js\";\nimport errorHandling from \"./../javascript/errorHandling.js\";\nimport VueCtkDateTimePicker from 'vue-ctk-date-time-picker';\nimport 'vue-ctk-date-time-picker/dist/vue-ctk-date-time-picker.css';\nexport default {\n  name: 'viewAppointment',\n  components: {\n    VueCtkDateTimePicker: VueCtkDateTimePicker\n  },\n  data: function data() {\n    return {\n      response: [],\n      newDentistName: null,\n      newVisitTime: null,\n      newProcedure: null,\n      newDescription: null,\n      editingPost: false,\n      dateTime: \"\",\n      disabledHours: ['00', '01', '02', '03', '04', '05', '06', '07', '19', '20', '21', '22', '23'],\n      minDate: ''\n    };\n  },\n  computed: {\n    formatDateTime: function formatDateTime() {\n      //this.response.visitTime.format(\"YYYY-MM-DDTHH:MM:SS\");\n      return this.response.visitTime + \":00\";\n    }\n  },\n  methods: {\n    loadAppointment: function loadAppointment() {\n      var _this = this;\n\n      apiRequests.getRequestToApiWithAuthorization('/api/visits/' + this.$route.params.Pid).then(function (response) {\n        _this.response = response.data;\n      }).catch(function () {\n        errorHandling.errorMsgWithButton(\"This appointment no longer exists!\");\n      });\n    },\n    deleteAppointment: function deleteAppointment(visitId) {\n      var _this2 = this;\n\n      apiRequests.deleteRequestWithAuthorization('/api/delete/visit/' + visitId).then(function () {\n        _this2.$router.push(\"/userAppointments\");\n      }).catch(function () {\n        errorHandling.errorMsgWithButton(\"Failed to delete this post!\");\n      });\n    },\n    enableEditingAppointment: function enableEditingAppointment() {\n      this.newDentistName = this.response.dentistName;\n      this.newVisitTime = this.response.visitTime;\n      this.newProcedure = this.response.procedure;\n      this.newDescription = this.response.description;\n      this.editingPost = this.response.id;\n    },\n    disableEditingAppointment: function disableEditingAppointment() {\n      this.newDentistName = null;\n      this.newVisitTime = null;\n      this.newProcedure = null;\n      this.newDescription = null;\n      this.editingPost = false;\n    },\n    saveEditAppointment: function saveEditAppointment(visitId) {\n      var _this3 = this;\n\n      this.$validator.validate().then(function (valid) {\n        if (!valid) {\n          errorHandling.errorMsg(\"These changes are forbidden!\", 1000);\n        } else {\n          _this3.response.dentistName = _this3.newDentistName;\n          _this3.response.visitTime = _this3.newVisitTime;\n          _this3.response.procedure = _this3.newProcedure;\n          _this3.response.description = _this3.newDescription;\n          apiRequests.patchRequestWithAuthorization('/api/edit/visit/' + visitId, {\n            dentistName: _this3.newDentistName,\n            visitTime: _this3.newVisitTime,\n            procedure: _this3.newProcedure,\n            description: _this3.newDescription\n          }).then(function () {\n            errorHandling.successMsg(\"Appointment successfully updated!\", 1200);\n          }).catch(function (error) {\n            if (error.response.status === 401 || error.response.status === 403) {\n              errorHandling.errorMsgWithButton(\"You need to be logged in to make an update!\");\n            } else if (error.response.status === 400) {\n              errorHandling.errorMsgWithButton(\"This appointment time is already taken. \" + \"Please try a different datetime.\");\n            } else {\n              errorHandling.errorMsgWithButton(\"Failed to update this post!\");\n            }\n          });\n\n          _this3.disableEditingAppointment();\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    //this.formatVisitTime();\n    this.loadAppointment();\n\n    var moment = require('moment'); // require\n\n\n    this.minDate = moment().format(\"YYYY-MM-DD HH\");\n  }\n};",{"version":3,"sources":["ViewAppointment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"container-fluid pb-5\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-xl-7 col-lg-8 col-md-9 col-sm-11\">\r\n                <div class=\"post-item text-left p-3 mb-3\">\r\n                    <div class=\"text-left\">\r\n                        <h3>Dentist name: {{response.dentistName}}</h3>\r\n                        <p>Visit time: {{ formatDateTime}}</p>\r\n                        <p>Procedure: {{response.procedure}}</p>\r\n                        <p>Description: {{response.description}}</p>\r\n                        <p class=\"mt-2 mb-1\">\r\n                            <small>\r\n                                Made by: {{response.madeBy}}\r\n                            </small>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group mx-4 mb-2\" v-if=\"editingPost === response.id\">\r\n                        <select class=\"form-control mb-2\" id=\"newDentistName\" name=\"newDentistName\"\r\n                                v-model=\"newDentistName\" v-validate=\"{ required: true }\">\r\n                            <option value=\"Mart Tamm\">Mart Tamm</option>\r\n                            <option value=\"Maire Kuusk\">Maire Kuusk</option>\r\n                            <option value=\"Pille Paju\">Pille Paju</option>\r\n                            <option value=\"Tiit Haab\">Tiit Haab</option>\r\n                            <option value=\"Milvi Pihlakas\">Milvi Pihlakas</option>\r\n                            <option value=\"Priit Vaher\" selected=\"selected\">Priit Vaher</option>\r\n                        </select>\r\n                        <div class=\"error\" v-if=\"errors.has('newDentistName')\">{{errors.first('newDentistName')}}</div>\r\n                        <div class=\"form-group text-left\">\r\n                            <VueCtkDateTimePicker id=\"DatePicker\" label=\"Select date and time\" name=\"visitTime\"\r\n                                                  format='YYYY-MM-DD HH'\r\n                                                  v-validate=\"{ required: true}\"\r\n                                                  :min-date=\"minDate\"\r\n                                                  v-model=\"newVisitTime\"\r\n                                                  :minute-interval=\"60\"\r\n                                                  :disabled-hours=\"disabledHours\">\r\n                            </VueCtkDateTimePicker>\r\n                        </div>\r\n                        <div class=\"error\" v-if=\"errors.has('newVisitTime')\">{{errors.first('newVisitTime')}}</div>\r\n                        <input class=\"form-control mb-2\" name=\"newProcedure\"\r\n                               v-model=\"newProcedure\" v-validate=\"{ required: true, min: 3, max: 128 }\">\r\n                        <div class=\"error\" v-if=\"errors.has('newProcedure')\">{{errors.first('newProcedure')}}</div>\r\n                        <textarea class=\"form-control mb-2\" rows=\"3\" name=\"newDescription\"\r\n                                  v-model=\"newDescription\" v-validate=\"{ required: true, min: 5 }\"></textarea>\r\n                        <div class=\"error\" v-if=\"errors.has('newDescription')\">{{errors.first('newDescription')}}</div>\r\n                        <button class=\"btn btn-primary m-1\" @click=\"saveEditAppointment(response.id)\">Save\r\n                        </button>\r\n                        <button class=\"btn btn-secondary m-1\" @click=\"disableEditingAppointment\">Cancel</button>\r\n                    </div>\r\n                    <button v-if=\"response.canDelete\" class=\"btn btn-danger m-1\" type=\"submit\"\r\n                            @click=\"deleteAppointment(response.id)\">Cancel appointment\r\n                    </button>\r\n                    <button v-if=\"response.canDelete\" class=\"btn btn-warning m-1\" type=\"submit\"\r\n                            @click=\"enableEditingAppointment()\">Edit appointment\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import apiRequests from '../javascript/apiRequests.js';\r\n    import errorHandling from './../javascript/errorHandling.js';\r\n    import VueCtkDateTimePicker from 'vue-ctk-date-time-picker';\r\n    import 'vue-ctk-date-time-picker/dist/vue-ctk-date-time-picker.css';\r\n\r\n\r\n    export default {\r\n        name: 'viewAppointment',\r\n        components: {\r\n            VueCtkDateTimePicker\r\n        },\r\n        data() {\r\n\r\n            return {\r\n                response: [],\r\n                newDentistName: null,\r\n                newVisitTime: null,\r\n                newProcedure: null,\r\n                newDescription: null,\r\n                editingPost: false,\r\n                dateTime: \"\",\r\n                disabledHours: ['00','01','02','03','04','05','06','07','19','20','21','22','23'],\r\n                minDate:'',\r\n\r\n            };\r\n        },\r\n        computed: {\r\n            formatDateTime: function () {\r\n                //this.response.visitTime.format(\"YYYY-MM-DDTHH:MM:SS\");\r\n                return this.response.visitTime + \":00\"\r\n            },\r\n        },\r\n        methods: {\r\n\r\n            loadAppointment() {\r\n                apiRequests\r\n                    .getRequestToApiWithAuthorization('/api/visits/' + this.$route.params.Pid)\r\n                    .then((response) => {\r\n                        this.response = response.data;\r\n                    })\r\n                    .catch(() => {\r\n                            errorHandling.errorMsgWithButton(\"This appointment no longer exists!\")\r\n                        }\r\n                    );\r\n            },\r\n            deleteAppointment(visitId) {\r\n                apiRequests\r\n                    .deleteRequestWithAuthorization('/api/delete/visit/' + visitId)\r\n                    .then(() => {\r\n                        this.$router.push(\"/userAppointments\");\r\n                    })\r\n                    .catch(() => {\r\n                            errorHandling.errorMsgWithButton(\"Failed to delete this post!\");\r\n                        }\r\n                    );\r\n            },\r\n            enableEditingAppointment() {\r\n                this.newDentistName = this.response.dentistName;\r\n                this.newVisitTime = this.response.visitTime;\r\n                this.newProcedure = this.response.procedure;\r\n                this.newDescription = this.response.description;\r\n                this.editingPost = this.response.id;\r\n            },\r\n            disableEditingAppointment: function () {\r\n                this.newDentistName = null;\r\n                this.newVisitTime = null;\r\n                this.newProcedure = null;\r\n                this.newDescription = null;\r\n                this.editingPost = false;\r\n            },\r\n            saveEditAppointment(visitId) {\r\n                this.$validator.validate().then(valid => {\r\n                    if (!valid) {\r\n                        errorHandling.errorMsg(\"These changes are forbidden!\", 1000);\r\n                    } else {\r\n                        this.response.dentistName = this.newDentistName;\r\n                        this.response.visitTime = this.newVisitTime;\r\n                        this.response.procedure = this.newProcedure;\r\n                        this.response.description = this.newDescription;\r\n                        apiRequests\r\n                            .patchRequestWithAuthorization('/api/edit/visit/' + visitId, {\r\n                                dentistName: this.newDentistName,\r\n                                visitTime: this.newVisitTime,\r\n                                procedure: this.newProcedure,\r\n                                description: this.newDescription\r\n                            })\r\n                            .then(() => {\r\n                                errorHandling.successMsg(\"Appointment successfully updated!\", 1200);\r\n\r\n                            }).catch((error) => {\r\n                                if (error.response.status === 401 || error.response.status === 403) {\r\n                                    errorHandling.errorMsgWithButton(\"You need to be logged in to make an update!\");\r\n                                }\r\n                                else if(error.response.status === 400) {\r\n                                    errorHandling.errorMsgWithButton(\"This appointment time is already taken. \" +\r\n                                        \"Please try a different datetime.\")\r\n                                }\r\n                                else {\r\n                                    errorHandling.errorMsgWithButton(\"Failed to update this post!\")\r\n                                }\r\n                            });\r\n\r\n                    this.disableEditingAppointment();\r\n                    }\r\n                });\r\n            },\r\n\r\n        },\r\n        mounted() {\r\n            //this.formatVisitTime();\r\n            this.loadAppointment();\r\n            let moment = require('moment'); // require\r\n            this.minDate = moment().format(\"YYYY-MM-DD HH\");\r\n\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .post-item {\r\n        background-color: #f9f9f9;\r\n        border: 4px solid #e9e9e9;\r\n    }\r\n\r\n    .reply-area {\r\n        background-color: #f9f9f9;\r\n    }\r\n\r\n    .custom-file-upload {\r\n        border: 2px solid gray;\r\n        color: gray;\r\n        background-color: white;\r\n        padding: 8px 20px;\r\n        border-radius: 8px;\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    input[type=file] {\r\n        display: none;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}